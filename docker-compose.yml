version: '3.8'
services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: laravel_app
    volumes:
      - .:/var/www  # Mount application files from host to container
    environment:
      - APP_ENV=local
      - APP_DEBUG=true
      - APP_KEY=base64:YOUR_APP_KEY  # Ganti dengan APP_KEY yang valid
    depends_on:
      - db  # Make sure db service is up first
    networks:
      - laravel_network

  db:
    image: mysql:8.0
    container_name: laravel_db
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: arista
      MYSQL_DATABASE: arista
      MYSQL_USER: arista_user
      MYSQL_PASSWORD: arista@123
    ports:
      - "3306:3306"  # Expose MySQL port
    volumes:
      - db_data:/var/lib/mysql  # Persistent database data
    networks:
      - laravel_network

  nginx:
    image: nginx:latest
    container_name: laravel_nginx
    ports:
      - "8080:80"  # Map port 80 of container to port 8080 on host
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro  # Mount Nginx config file (make sure it exists)
      - .:/var/www  # Mount application files for Nginx to serve
    depends_on:
      - app  # Wait for the app to be ready
    networks:
      - laravel_network

volumes:
  db_data:  # Named volume to persist MySQL data

networks:
  laravel_network:
    driver: bridge  # Network for all services to communicate
